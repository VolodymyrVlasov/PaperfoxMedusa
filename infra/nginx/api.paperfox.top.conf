# HTTP → HTTPS
server {
  listen 80;
  server_name api.paperfox.top;
  return 301 https://$host$request_uri;
}

# HTTPS API
server {
  listen 443 ssl http2;
  server_name api.paperfox.top;

  ssl_certificate     /etc/letsencrypt/live/api.paperfox.top/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.paperfox.top/privkey.pem;

  # /app → admin (канонічний домен для адмінки)
  location ^~ /app/  { return 301 https://admin.paperfox.top$request_uri; }
  location = /app    { return 301 https://admin.paperfox.top/app/; }

  # === CORS + proxy для admin/store/auth ===
  location ~* ^/(admin|store|auth)/ {

    # Приховати upstream CORS-заголовки, щоб не дублювались
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Credentials;
    proxy_hide_header Access-Control-Expose-Headers;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Methods;

    # Рефлектований CORS ТІЛЬКИ для наших доменів
    set $cors_origin "";
    if ($http_origin = https://admin.paperfox.top) { set $cors_origin $http_origin; }
    if ($http_origin = https://paperfox.top)       { set $cors_origin $http_origin; }
    if ($http_origin = https://www.paperfox.top)   { set $cors_origin $http_origin; }

    # Загальні CORS-заголовки — для всіх методів (будуть і на POST/GET, і на OPTIONS)
    add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Expose-Headers "Set-Cookie, Authorization" always;
    add_header Vary Origin always;

    # Префлайт (дублюємо ACAO/ACAC тут, щоб 100% були у відповіді 204)
    if ($request_method = OPTIONS) {
      add_header Access-Control-Allow-Origin $cors_origin always;
      add_header Access-Control-Allow-Credentials true always;
      add_header Access-Control-Allow-Methods "GET,POST,PUT,PATCH,DELETE,OPTIONS" always;
      add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
      add_header Access-Control-Max-Age 86400 always;
      add_header Vary Origin always;
      return 204;
    }

    # Проксі до Medusa
    proxy_pass http://127.0.0.1:9000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 300;

    # Куки для крос-домену (SameSite=None; Secure)
    proxy_cookie_flags samesite=None secure;
    # Якщо директиви немає у вашій збірці nginx:
    # proxy_cookie_path / "/; SameSite=None; Secure";
  }
  # Решта — прозорий проксі
  location / {
    proxy_pass http://127.0.0.1:9000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 300;
  }
location /static/ {
  alias /home/deploy/apps/medusa-paperfox/medusa-paperfox/static/;
  access_log off;
  add_header Cache-Control "public, max-age=604800";
  try_files $uri =404;
}
}
